/**
 * AngularEasyForms - Basic CRUD operation handling in a box
 * @version v0.1.0 - 2013-10-27
 * @link http://github.com/hxu/angular-easy-forms
 * @author Han Xu
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */
"use strict";angular.module("easyForms",["restangular"]),angular.module("easyForms").directive("efSubmit",function(){return{template:'<button type="submit" class="btn btn-default" ng-click="submit()">Submit</button>',replace:!0}}).directive("efReset",function(){return{replace:!0,template:'<button class="btn" ng-click="reset()">Reset</button>'}}),angular.module("easyForms").directive("efForm",["easyForm",function(a){return{scope:{efResource:"="},require:"^form",link:function(b,c,d){b.formStyle=d.efStyle||"basic";var e={basic:null,inline:"form-inline",horizontal:"form-horizontal"};null!=e[b.formStyle]&&c.addClass(e[b.formStyle]),a.extendScope(b),b.$initialize(b.efResource,d),b.$watch("efResource",function(a){b.$initialize(a,d)})}}}]),angular.module("easyForms").directive("efInput",function(){return{replace:!0,template:function(a,b){var c='<div class="form-group"><label>'+b.efLabel+"</label>";return c+=void 0!=b.ngModel?'<input ng-model="'+b.ngModel+'">':'<input ng-model="model.'+b.name+'">',c+="</div>"},compile:function(a,b){var c=a.find("input"),d=a.find("label");if(void 0==b.name&&void 0==b.id)throw"efInput - must provide either id or name";void 0==b.id?(c.attr("name",b.name),c.attr("id",b.name)):void 0==b.name&&(c.attr("name",b.id),c.attr("id",b.id)),d.attr("for",c.attr("id"));var e=function(a){var b=a.split(" ");return b=_.compact(b),b=_.uniq(b),b=_.without(b,"form-group")};angular.forEach(e(b.class),function(a){c.addClass(a)}),angular.forEach(b.$attr,function(a,d){var e=["name","id","class","ng-model"];if(-1==e.indexOf(a)&&"ef-"!=a.substring(0,3)){var f=b[d];c.attr(a,f)}})}}}),angular.module("easyForms").directive("efMessages",function(){return{replace:!0,template:'<div class="alert alert-info" ng-show="hasMessages()"><div ng-repeat="m in messages">{{ m }}</div></div>'}}),angular.module("easyForms").provider("easyForm",function(){var a={triggerResetSignal:"efTriggerFormReset",triggerReinitializeSignal:"efReinitialize",resetSignal:"efFormReset",submitSignal:"efFormSubmit",successSignal:"efFormSubmitSuccess",errorSignal:"efFormSubmitError",successMessage:"Form submission success",errorMessage:"Form submission error"};this.overrideDefault=function(b,c){void 0!=a[b]&&(a[b]=c)},this.$get=["efUtils","Restangular","$parse",function(b,c,d){var e={$initialize:function(e,f,g){this.form=this[g.name],this.errors={},this.messages=[],this.model={},this.pristineModel={},this.editMode=!1,this.isCollection=!0,void 0!=f&&b.isRestangularResource(f)?b.isRestangularCollection(f)?this.resourceObj=f:(this.resourceObj=c.copy(f),this.model=this.resourceObj,this.pristineModel=c.copy(this.resourceObj),this.isCollection=!1,this.editMode=!0):this.resourceObj=c.all(g.efResource);var h=d(g.efConfig)(this.$parent);this.efConfig=void 0!=h&&_.isObject(h)?angular.extend(a,h):a,e.$on(e.efConfig.triggerResetSignal,function(){e.reset(e)})},hasErrors:function(){return!_.isEmpty(this.errors)},hasMessages:function(){return this.messages.length>0},$clearMessages:function(){this.messages.length=0},$clearErrors:function(){this.errors={}},canSave:function(){return!this.form.$pristine&&this.form.$valid},canRevert:function(){return!this.form.$pristine},reset:function(){this.model=b.isRestangularResource(this.model)?this.resourceObj=c.copy(this.pristineModel):angular.copy(this.pristineModel),this.$clearMessages(),this.$clearErrors(),this.form.$setPristine(),this.$emit(this.efConfig.resetSignal)},submit:function(){var a;this.$clearErrors(),a=this.editMode?this.resourceObj.put():this.resourceObj.post(this.model),this.$emit(this.efConfig.submitSignal),this.responseHandler(a)},successHandler:function(){this.messages.push(this.efConfig.successMessage),this.$emit(this.efConfig.successSignal)},errorHandler:function(a,b){a.messages.push(a.efConfig.errorMessage),angular.forEach(b.data,function(b,c){a.errors[c]=angular.isArray(b)?b:[b]}),a.$emit(a.efConfig.errorSignal)},responseHandler:function(a,b){b.then(a.successHandler,a.errorHandler)}};return e.extendScope=function(a){angular.forEach(e,function(b,c){"extendScope"!=c&&(a[c]=_.bind(b,a,a))})},e}]}),angular.module("easyForms").factory("efUtils",function(){var a={};return a.isResource=function(a){return void 0!=a.save&&void 0!=a.query&&void 0!=a.get},a.isRestangularResource=function(a){return void 0!=a.restangularCollection},a.isRestangularCollection=function(a){return 1==a.restangularCollection},a});